{"ast":null,"code":"var _jsxFileName = \"/Users/zevyirmiyahu/Documents/workspace/pokefarm/client/src/routes/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { Navigate } from \"react-router-dom\";\nimport { useAuth } from \"./providers/AuthProvider\";\nimport { ROUTES } from \"../constants/AppConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProtectedRoute = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    user\n  } = useAuth();\n  const {\n    login\n  } = useContext(AuthContext);\n  if (!user) {\n    // Not Authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: ROUTES.LOGIN_IN\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"aqm503/VRSPFy6wHCSCH2etwUto=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","useAuth","ROUTES","ProtectedRoute","children","user","login","useContext","AuthContext","LOGIN_IN"],"sources":["/Users/zevyirmiyahu/Documents/workspace/pokefarm/client/src/routes/ProtectedRoute.js"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\nimport { useAuth } from \"./providers/AuthProvider\";\nimport { ROUTES } from \"../constants/AppConstants\";\n\nexport const ProtectedRoute = ({ children }) => {\n  const { user } = useAuth();\n  const { login } = useContext(AuthContext);\n\n  if (!user) {\n    // Not Authenticated\n    return <Navigate to={ROUTES.LOGIN_IN} />;\n  }\n  return children;\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,MAAM,QAAQ,2BAA2B;AAAC;AAEnD,OAAO,MAAMC,cAAc,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACzC,MAAM;IAAEC;EAAK,CAAC,GAAGJ,OAAO,EAAE;EAC1B,MAAM;IAAEK;EAAM,CAAC,GAAGC,UAAU,CAACC,WAAW,CAAC;EAEzC,IAAI,CAACH,IAAI,EAAE;IACT;IACA,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAEH,MAAM,CAACO;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAC1C;EACA,OAAOL,QAAQ;AACjB,CAAC;AAAC,GATWD,cAAc;EAAA,QACRF,OAAO;AAAA;AAAA,KADbE,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}