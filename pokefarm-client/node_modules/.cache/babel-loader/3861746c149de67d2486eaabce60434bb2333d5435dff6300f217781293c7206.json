{"ast":null,"code":"var _jsxFileName = \"/Users/zevyirmiyahu/Documents/workspace/pokefarm/client/src/routes/providers/AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LOGIN, ROUTES } from \"../../constants/AppConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useLocalStorage(\"user\", null);\n  const navigate = useNavigate();\n\n  /**\n   * Takes users credentials and post request backend\n   * @param {{string, string}} credentials\n   */\n  const login = credentials => {\n    axios.post(`${LOGIN.BASE_URL}/Login`, credentials).then(response => {\n      const loginResponse = response.data.loginResponse;\n      if (loginResponse === LOGIN.SUCCESS) {\n        const adminUser = new User(\"01\", \"admin\", []); // just for testing, will change\n        setUser(adminUser);\n        nagivage(ROUTES.USER_ACCOUNT);\n      }\n      return loginResponse; // Login Failure\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const logout = () => {\n    setUser(null);\n    navigate(ROUTES.LOGIN_IN);\n  };\n  const value = useMemo(() => ({\n    user,\n    login,\n    logout\n  }), [user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"XAy98q+SfqDvN9TiTUjXqykJDLs=\", true, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useNavigate","LOGIN","ROUTES","AuthContext","AuthProvider","children","user","setUser","useLocalStorage","navigate","login","credentials","axios","post","BASE_URL","then","response","loginResponse","data","SUCCESS","adminUser","User","nagivage","USER_ACCOUNT","catch","error","console","log","logout","LOGIN_IN","value","useMemo","useAuth"],"sources":["/Users/zevyirmiyahu/Documents/workspace/pokefarm/client/src/routes/providers/AuthProvider.js"],"sourcesContent":["import React, { createContext, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LOGIN, ROUTES } from \"../../constants/AppConstants\";\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useLocalStorage(\"user\", null);\n  const navigate = useNavigate();\n\n  /**\n   * Takes users credentials and post request backend\n   * @param {{string, string}} credentials\n   */\n  const login = (credentials) => {\n    axios\n      .post(`${LOGIN.BASE_URL}/Login`, credentials)\n      .then((response) => {\n        const loginResponse = response.data.loginResponse;\n        if (loginResponse === LOGIN.SUCCESS) {\n          const adminUser = new User(\"01\", \"admin\", []); // just for testing, will change\n          setUser(adminUser);\n          nagivage(ROUTES.USER_ACCOUNT);\n        }\n        return loginResponse; // Login Failure\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const logout = () => {\n    setUser(null);\n    navigate(ROUTES.LOGIN_IN);\n  };\n\n  const value = useMemo(() => ({user, login, logout}), [user]);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,EAAEC,MAAM,QAAQ,8BAA8B;AAAC;AAC7D,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AAEnC,OAAO,MAAMM,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC;EACrD,MAAMC,QAAQ,GAAGT,WAAW,EAAE;;EAE9B;AACF;AACA;AACA;EACE,MAAMU,KAAK,GAAIC,WAAW,IAAK;IAC7BC,KAAK,CACFC,IAAI,CAAE,GAAEZ,KAAK,CAACa,QAAS,QAAO,EAAEH,WAAW,CAAC,CAC5CI,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,aAAa,GAAGD,QAAQ,CAACE,IAAI,CAACD,aAAa;MACjD,IAAIA,aAAa,KAAKhB,KAAK,CAACkB,OAAO,EAAE;QACnC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;QAC/Cd,OAAO,CAACa,SAAS,CAAC;QAClBE,QAAQ,CAACpB,MAAM,CAACqB,YAAY,CAAC;MAC/B;MACA,OAAON,aAAa,CAAC,CAAC;IACxB,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,MAAM,GAAG,MAAM;IACnBrB,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAACP,MAAM,CAAC2B,QAAQ,CAAC;EAC3B,CAAC;EAED,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO;IAACzB,IAAI;IAAEI,KAAK;IAAEkB;EAAM,CAAC,CAAC,EAAE,CAACtB,IAAI,CAAC,CAAC;EAE5D,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEwB,KAAM;IAAA,UAAEzB;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAC9E,CAAC;AAAC,GAjCWD,YAAY;EAAA,QAENJ,WAAW;AAAA;AAAA,KAFjBI,YAAY;AAmCzB,OAAO,MAAM4B,OAAO,GAAG;EAAA;EAAA,OAAMjC,UAAU,CAACI,WAAW,CAAC;AAAA;AAAC,IAAxC6B,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}